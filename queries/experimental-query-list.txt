
## -----------------------------------------------------------------------------------------
ID: 
LB: Find me all hybridoma who have as target a protein involved in GO:0001618:virus receptor activity
KW: federated, uniprot, GO, mabt, monoclonal antibody target, virus receptor activity
## -----------------------------------------------------------------------------------------
##  Note / TODO? could be improved if UNiProtKB protein isIdentifiedByIRI as well
## -----------------------------------------------------------------------------------------

PREFIX GO: <http://purl.obolibrary.org/obo/GO_>

SELECT ?cl ?target_label ?protein ?protein_ac WHERE {

    service <https://sparql.uniprot.org/sparql> {
    select ?protein where {  
      ?protein rdf:type up:Protein ;
        #up:reviewed true  ;
        #up:organism taxon:9606 ;
        up:classifiedWith GO:0001618 . # virus receptor activity
        #up:classifiedWith/rdfs:subClassOf GO:0001618 . # virus receptor activity
        #up:classifiedWith|(up:classifiedWith/rdfs:subClassOf) GO:0001618 . # virus receptor activity
	  }
	  #limit 10000
  	}
    BIND(SUBSTR(STR(?protein),33) AS ?protein_ac)
  ?cl a cello:Hybridoma .
  ?cl cello:hasMoAbTarget ?target .
  ?target rdfs:label ?target_label .
  ?target cello:isIdentifiedByXref ?xref .
  ?xref cello:database db:UniProtKB .
  ?xref cello:accession ?protein_ac .
}
#limit 100


## -----------------------------------------------------------------------------------------
ID: 
LB: Find me all cell lines KO for a gene that contains a Homeobox domain (Prosite:PS50071)
KW: federated, uniprot, prosite, domain, gene, ko, knockout
## -----------------------------------------------------------------------------------------

PREFIX HGNC: <https://www.genenames.org/data/gene-symbol-report/#!/hgnc_id/HGNC:>
PREFIX uniprot: <http://purl.uniprot.org/uniprot/>

SELECT ?cl ?ko_gene_ac ?ko_gene_name ?ko_gene_link ?up_protein  {
  
  service <https://sparql.uniprot.org/sparql> {
    SELECT distinct ?up_protein ?up_xref WHERE {
      ?up_protein a up:Protein ; up:reviewed true; 
      	rdfs:seeAlso <http://purl.uniprot.org/prosite/PS50071> . # homeobox2 domain reference
      ?up_protein rdfs:seeAlso ?up_xref . 
      ?up_xref up:database <http://purl.uniprot.org/database/AGR> # Alliance of Genome Resources database
    } }
  
  bind(substr(str(?up_xref), 29) as ?ko_gene_ac) . # example up_xref: <http://purl.uniprot.org/agr/HGNC:24227>
  ?cl a / rdfs:subClassOf cello:CellLine .
  ?cl cello:hasGeneKnockout / cello:ofGene / cello:isIdentifiedByXref ?xref .
  # ?xref cello:database db:HGNC .  # uncomment to get only Human genes
  # ?xref cello:database db:MGI .   # uncomment to get only Mice genes
  ?xref cello:accession ?ko_gene_ac . #  example gene_ac in cello:  HGNC:4044
  ?xref rdfs:seeAlso ?ko_gene_link ; rdfs:label ?ko_gene_name .
}
order by ?ko_gene_ac


## -----------------------------------------------------------------------------------------
ID: 
LB: Find cell lines that are KO for a human gene which has an ortholog in Drosophila
KW: federated, OMA, uniprot, ortholog, drosophila, gene, ko, knockout
## -----------------------------------------------------------------------------------------
##  Note: only partial result due to timeout of OMA query 
##  Note: uses uniprot to map uniprot protein accession to HGNC accession
## -----------------------------------------------------------------------------------------

PREFIX orth: <http://purl.org/net/orth#>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX lscr: <http://purl.org/lscr#>
PREFIX obo: <http://purl.obolibrary.org/obo/>

SELECT ?cl ?ko_gene_ac ?human_prot_iri ?droso_prot_iri {   
  service <https://sparql.omabrowser.org/sparql/> {
    select distinct ?droso_prot_iri ?human_prot_iri ?human_gene_iri where { 
      ?HOG a orth:OrthologsCluster ;
        orth:hasHomologousMember ?node1 ;
        orth:hasHomologousMember ?node2 .
      ?node2 orth:hasHomologousMember* ?HUMAN_PROTEIN. 
      ?node1 orth:hasHomologousMember* ?DROSO_PROTEIN.
      ?DROSO_PROTEIN a orth:Protein ;
        orth:organism/obo:RO_0002162/up:scientificName 'Drosophila melanogaster' ;
        lscr:xrefUniprot ?droso_prot_iri .
      ?HUMAN_PROTEIN a orth:Protein ;
        orth:organism/obo:RO_0002162/up:scientificName 'Homo sapiens' ; 
        lscr:xrefUniprot ?human_prot_iri .
      filter(?node1 != ?node2) 

      service <https://sparql.uniprot.org/sparql> {
        ?human_prot_iri rdfs:seeAlso ?human_gene_iri . 
        ?human_gene_iri up:database <http://purl.uniprot.org/database/AGR> 
      }       
	} 
	limit 100
  }
  bind(substr(str(?human_gene_iri), 29) as ?ko_gene_ac) .
  ?cl cello:hasGeneKnockout / cello:ofGene / cello:isIdentifiedByXref ?xref .
  ?xref cello:accession ?ko_gene_ac . #  example gene_ac in cello:  HGNC:4044
  
}
limit 2000



## -----------------------------------------------------------------------------------------
ID: 
LB: Find me cell lines that have mutations in a gene which is highly expressed in testis
KW: federated, Bgee, expression, gene, mutation
## -----------------------------------------------------------------------------------------

(step 1)

PREFIX orth: <http://purl.org/net/orth#>
PREFIX genex: <http://purl.org/genex#>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX lscr: <http://purl.org/lscr#>

SELECT DISTINCT ?gene ?protein ?score {
	values (?anat ?anat2 ) { (obo:UBERON_0000473 obo:GO_0005575 ) } . # testis / generic cellulat component
	?seq a orth:Gene ; rdfs:label ?gene ; orth:organism / obo:RO_0002162 ?species . #in taxon
	?seq lscr:xrefUniprot ?protein .
	?species a up:Taxon .
  	?species up:commonName "human" .
	?expression a genex:Expression .
	?expression genex:hasSequenceUnit ?seq .
	?expression genex:hasExpressionCondition ?condition .
	?expression genex:hasExpressionLevel ?score .
	?condition genex:hasAnatomicalEntity ?anat .
	?condition genex:hasAnatomicalEntity ?anat2  .
	?condition genex:hasDevelopmentalStage / rdfs:label "life cycle" .
  	#?condition genex:hasStrain / rdfs:label "wild-type" .
	#?condition genex:hasSex "any" .  
  filter(?score > 90)
  filter(! contains(str(?protein), '_'))
}
ORDER BY DESC(?score)

TODO: use uniprot to map up:protein to HGNC urls


Find me cell lines that have mutations in a gene which is highly expressed in testis
score  : gene number
-------:-------------
90-100 : 3904
80-90  : 5215
70-80  : 5086
60-70  : 4888
50-60  : 5958
40-50  : 8676
30-40  : 8906
20-30  : 3211
10-20  : 1833
00-10  :  840

Syntax ok:

(step 2)

PREFIX orth: <http://purl.org/net/orth#>
PREFIX genex: <http://purl.org/genex#>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX up: <http://purl.uniprot.org/core/>
PREFIX lscr: <http://purl.org/lscr#>


SELECT DISTINCT ?gene ?protein ?human_gene_iri ?score {
  
  service <https://sparql.uniprot.org/sparql> {
      select ?protein ?human_gene_iri where {
        ?protein rdfs:seeAlso ?human_gene_iri . 
        ?human_gene_iri up:database <http://purl.uniprot.org/database/AGR>   }  }     
  

  ?seq a orth:Gene ; rdfs:label ?gene ; orth:organism / obo:RO_0002162 ?species . #in taxon
	?seq lscr:xrefUniprot ?protein .
	?species a up:Taxon .
  	?species up:commonName "human" .
	?expression a genex:Expression .
	?expression genex:hasSequenceUnit ?seq .
	?expression genex:hasExpressionCondition ?condition .
	?expression genex:hasExpressionLevel ?score .
	?condition genex:hasAnatomicalEntity obo:UBERON_0000473 .           # testis
	?condition genex:hasAnatomicalEntity obo:GO_0005575  .              # any cellular component
	?condition genex:hasDevelopmentalStage / rdfs:label "life cycle" .  # any stage
  	#?condition genex:hasStrain / rdfs:label "wild-type" .              # any strain
	#?condition genex:hasSex "any" .                                    # any sex

  
#  filter(?score > 90)
#  filter(! contains(str(?protein), '_'))
  
}
#limit 100



## -----------------------------------------------------------------------------------------
TODO in cellosaurus:
## -----------------------------------------------------------------------------------------
- add IRI for uniprot proteins
- add up:commonName / up:scientificName for species
- derivedFromIndividualBelongingToSpecies - add skos link or owl:equiv as obo:RO_0002162 used in Bgee
- see how to integrate up:Taxon also used in Bgee
## -----------------------------------------------------------------------------------------

